<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Welcome" xml:space="preserve">
    <value>✨Welcome✨ *{0}*\! I am happy you came here to play ❤️	Send /newgame command to start playing\!</value>
    <comment/>
  </data>
  <data name="DictionaryUpdateConfirmation" xml:space="preserve">
    <value>👍 I'll pick a word from the selected dictionary for the next game\!</value>
    <comment/>
  </data>
  <data name="DictionaryUpdatePrompt" xml:space="preserve">
    <value>Please select the dictionary you want to use.</value>
    <comment/>
  </data>
  <data name="GameInProgressError" xml:space="preserve">
    <value>🎮 Please complete the game in progress before starting a new one 🕹</value>
    <comment/>
  </data>
  <data name="InstructionsCaption" xml:space="preserve">
    <value>Guess the WORD in six tries\.	*Start typing your guess and send it to me\!*</value>
    <comment/>
  </data>
  <data name="WordTooLongError" xml:space="preserve">
    <value>🙇 Sorry, I can't accept this word because is *too long*</value>
    <comment/>
  </data>
  <data name="WordTooShortError" xml:space="preserve">
    <value>🙇 Sorry, I can't accept this word because is *too short*</value>
    <comment/>
  </data>
  <data name="WordNotInDictionaryError" xml:space="preserve">
    <value>🙇 Sorry, this word is *not in the game dictionary*: {0} 📚 🤔</value>
    <comment>0 - dictionary display name</comment>
  </data>
  <data name="EndOfGameGuessed" xml:space="preserve">
    <value>🎉 Congratulations, you guessed the word {0} in {1} guesses\! 🎉</value>
    <comment>0 - word+link 1 - number of guesses</comment>
  </data>
  <data name="EndOfGameNotGuessed" xml:space="preserve">
    <value>🙇 Sorry, you didn't guess the word {0} 🙇</value>
    <comment>0 - word+link</comment>
  </data>
  <data name="SendNewGameToPlayAgain" xml:space="preserve">
    <value>Send /newgame command to play again</value>
    <comment/>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>Sorry, something went wrong processing your message. 😥 Please try again later.</value>
    <comment/>
  </data>
  <data name="newgameCommandDescription" xml:space="preserve">
    <value>Starts a new game if the current one is over</value>
    <comment/>
  </data>
  <data name="howtoplayCommandDescription" xml:space="preserve">
    <value>Shows game rules and how to play information</value>
    <comment/>
  </data>
  <data name="showboardCommandDescription" xml:space="preserve">
    <value>Shows the current game board</value>
    <comment/>
  </data>
  <data name="changedictionaryCommandDescription" xml:space="preserve">
    <value>Change the dictionary language (i.e. English, Italian, etc..)</value>
    <comment/>
  </data>
  <data name="ItalianDictionaryName" xml:space="preserve">
    <value>Italian</value>
    <comment/>
  </data>
  <data name="EnglishWordleOriginalDictionaryName" xml:space="preserve">
    <value>English</value>
    <comment/>
  </data>
  <data name="helpCommandDescription" xml:space="preserve">
    <value>Shows the command list</value>
    <comment/>
  </data>
  <data name="StatisticsDictionaryLine" xml:space="preserve">
    <value>📖 {DictionaryName}</value>
    <comment/>
  </data>
  <data name="StatisticsWinRateLine" xml:space="preserve">
    <value>\#{WinRatePosition}🏅  *Games*  {GamesPlayedCount}  🏆 {WinRate}%</value>
    <comment/>
  </data>
  <data name="StatisticsStreakLine" xml:space="preserve">
    <value>\#{BestStreakPosition}🏅  *Streak* {CurrentStreak} \(best {BestStreak}\)</value>
    <comment/>
  </data>
  <data name="StatisticsPointsLine" xml:space="preserve">
    <value>\#{PointsPosition}🏅  *Points* {TotalPoints} \({AveragePoints} per game\)</value>
    <comment/>
  </data>
  <data name="StatisticsEndingLine" xml:space="preserve">
    <value>Share this message to brag with your friends ✨ Play wordle on t\.me/WordleChatBot</value>
    <comment/>
  </data>
  <data name="StatisticsNoDataAvailable" xml:space="preserve">
    <value>There aren't enough games played to show statistics</value>
    <comment/>
  </data>
  <data name="statsCommandDescription" xml:space="preserve">
    <value>Show played games statistics and your ranking</value>
    <comment/>
  </data>
</root>